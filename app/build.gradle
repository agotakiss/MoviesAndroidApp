apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.agotakiss.movie4u"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 2
        versionName "1.1"
        testInstrumentationRunner 'com.github.tmurakami.dexopener.DexOpenerAndroidJUnitRunner' //Required for DaggerMock
    }

    signingConfigs {

        release {
            storeFile file("signing_keys/movie4u_release_keystore.jks")
            storePassword System.getenv("movie_signing_store_pass")
            keyAlias "agotakiss"
            keyPassword System.getenv("movie_signing_key_pass")
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            useProguard false
        }
        release {
            minifyEnabled true
            debuggable false
            useProguard true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

ext {

//Testing
    jUnitVersion = '4.12'
    mockitoVersion = '2.21.0'
    mockitoKotlinVersion = '2.0.0-RC1'
    espressoVersion = '3.0.2'
    androidTestRulesVersion = '1.0.2'
    daggerMockVersion = '0.8.4'
    dexOpenerVersion = '1.0.3'


    testDependencies = [junit           : "junit:junit:${jUnitVersion}",
                        kotlinJUnit     : "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}",
                        mockito         : "org.mockito:mockito-core:${mockitoVersion}",
                        mockitoKotlin   : "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoKotlinVersion}",
                        mockitoAndroid  : "org.mockito:mockito-android:${mockitoVersion}",
                        espresso        : "com.android.support.test.espresso:espresso-core:${espressoVersion}",
                        androidTestRules: "com.android.support.test:rules:${androidTestRulesVersion}",
                        daggerMock      : "com.github.fabioCollini.daggermock:daggermock-kotlin:${daggerMockVersion}",
                        dexOpener       : "com.github.tmurakami:dexopener:${dexOpenerVersion}"]

}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //noinspection GradleCompatible
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation "com.airbnb.android:lottie:$lottieVersion"


    implementation 'com.github.bumptech.glide:glide:4.7.1'
    implementation 'com.android.support:support-v4:27.1.1'
    kapt 'com.github.bumptech.glide:compiler:4.7.1'

    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'

    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    implementation 'com.android.support:support-v4:27.1.1'
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

    implementation "io.reactivex.rxjava2:rxjava:2.1.16"
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    implementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') {
        transitive = true
    }

    implementation "android.arch.persistence.room:runtime:$roomVersion"
    implementation "android.arch.persistence.room:rxjava2:$roomVersion"
    kapt "android.arch.persistence.room:compiler:$roomVersion"
    implementation "android.arch.persistence.room:rxjava2:$roomVersion"

    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'com.jakewharton.timber:timber:4.7.1'

    //TESTING
    testImplementation testDependencies.junit
    testImplementation testDependencies.kotlinJUnit
    testImplementation testDependencies.mockito
    testImplementation testDependencies.mockitoAndroid
    testImplementation testDependencies.mockitoKotlin
    testImplementation testDependencies.espresso
    testImplementation testDependencies.androidTestRules
    testImplementation testDependencies.daggerMock
    testImplementation testDependencies.dexOpener


    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

}
repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
}

// kotlin-gradle-plugin must be applied for configuration below to work
// (see https://kotlinlang.org/docs/reference/using-gradle.html)

repositories {
    jcenter()
}

configurations {
    ktlint
}

dependencies {
    ktlint "com.github.shyiko:ktlint:0.28.0"
    // additional 3rd party ruleset(s) can be specified here
    // just add them to the classpath (e.g. ktlint 'groupId:artifactId:version') and
    // ktlint will pick them up
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "src/**/*.kt"
}
